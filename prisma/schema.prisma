generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model event_details {
  event_id   Int
  member_id  Int
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  events     events   @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_details_ibfk_1")
  members    members  @relation(fields: [member_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_details_ibfk_2")

  @@id([event_id, member_id])
  @@index([member_id], map: "member_id")
}

model events {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(25)
  type          events_type
  description   String?         @db.VarChar(125)
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  event_details event_details[]
}

model members {
  id            Int             @id @default(autoincrement())
  no_induk      String          @unique(map: "no_induk_unique") @db.VarChar(20)
  full_name     String          @db.VarChar(75)
  birth         DateTime?       @db.Date
  father_name   String          @db.VarChar(75)
  address       String          @db.VarChar(125)
  region_id     Int
  status        members_status  @default(new)
  image         String?         @db.VarChar(750)
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  event_details event_details[]
  regions       regions         @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "members_ibfk_1")

  @@index([region_id], map: "region_id")
}

model regions {
  id         Int       @id @default(autoincrement())
  name       String    @unique(map: "name_unique") @db.VarChar(25)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  members    members[]
}

model users {
  id            Int        @id @default(autoincrement())
  full_name     String     @db.VarChar(75)
  email         String     @unique(map: "email_unique") @db.VarChar(128)
  password      String     @db.VarChar(225)
  role          users_role @default(user)
  status        Boolean    @default(true)
  refresh_token String?    @unique(map: "refresh_token_unique") @db.VarChar(750)
  created_at    DateTime   @default(now()) @db.Timestamp(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
}

enum events_type {
  dzikiran
  kematian
}

enum users_role {
  admin
  user
}

enum members_status {
  new
  active
  inactive
  repeat
}
